/*Create the database schema*/
CREATE database if not exists  pmg;

/*Point to the schema*/
use pmg;

/*Table creation*/
CREATE TABLE location (
	geo TEXT NOT NULL  ,
	state TEXT
);

CREATE TABLE store_revenue ( 	
    date TEXT,
	brand_id INT,
	store_location TEXT,
	geo TEXT,
	revenue INT
);
CREATE TABLE marketing_data (
	
    date TEXT,
	geo TEXT,
	impressions INT,
	clicks INT
);
  
/*Provide constraint and establish the data types  */
ALTER TABLE `pmg`.`store_revenue` 
CHANGE COLUMN `revenue` `revenue` FLOAT NULL DEFAULT NULL ;

ALTER TABLE `pmg`.`marketing_data` 
CHANGE COLUMN `impressions` `impressions` FLOAT NULL DEFAULT NULL ;

ALTER TABLE `pmg`.`marketing_data` 
CHANGE COLUMN `clicks` `clicks` FLOAT NULL DEFAULT NULL ;

ALTER TABLE location
ADD CONSTRAINT loc_id PRIMARY KEY (geo);

ALTER TABLE `pmg`.`store_revenue` 
CHANGE COLUMN `geo` `geo` CHAR(2) NULL DEFAULT NULL ,
ADD INDEX `geo_idx` (`geo` ASC) VISIBLE;
;
ALTER TABLE `pmg`.`store_revenue` 
ADD CONSTRAINT `geo`
  FOREIGN KEY (`geo`)
  REFERENCES `pmg`.`location` (`geo`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

ALTER TABLE `pmg`.`marketing_data` 
ADD INDEX `mk_geo_idx` (`geo` ASC) VISIBLE;
;
ALTER TABLE `pmg`.`marketing_data` 
ADD CONSTRAINT `mk_geo`
  FOREIGN KEY (`geo`)
  REFERENCES `pmg`.`location` (`geo`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

-- Question #0
SELECT * 
FROM pmg.marketing_data
LIMIT 2;
    
-- Question #1 Generate a query to get the sum of the clicks of the marketing data​ 
SELECT sum(clicks) AS tot_clicks
FROM pmg.marketing_data;

-- Question #2 Generate a query to gather the sum of revenue by geo from the store_revenue table​
SELECT geo as Location, sum(revenue) AS total_revenue
FROM pmg.store_revenue
GROUP BY geo;

/*Question #3 Merge these two datasets so we can see impressions, clicks, and revenue together by date and geo. Please ensure all records
 from each table are accounted for.​ */
 
-- Non matching observations are excluded  
SELECT sr.date,
	   sr.geo AS location,
	   sr.brand_id,sr.revenue,
	   mk.impressions, mk.clicks
FROM store_revenue sr
	JOIN marketing_data mk ON (sr.geo = mk.geo) AND (mk.date = sr.date)
ORDER BY location
;

--  Since we want to ensure all records from each table are accounted for ( previous output didnot) 
-- we further analysed using UNION RIGHT and LEFT JOIN

SELECT sr.date,
	sr.geo AS location,
    sr.brand_id,
    sr.revenue,
	mk.impressions, 
    mk.clicks
FROM store_revenue sr
	LEFT JOIN marketing_data mk ON (sr.geo = mk.geo) AND (mk.date = sr.date)
UNION
SELECT sr.date,
	   sr.geo AS location, 
       sr.brand_id,
       sr.revenue,
	   mk.impressions, 
       mk.clicks
FROM store_revenue sr
	RIGHT JOIN marketing_data mk ON (sr.geo = mk.geo) AND (mk.date = sr.date)
;

/*Q4  Most efficient store and why*/
-- First we check the total reveune (daily) 
SELECT sr.geo AS location, 
	   sum(sr.revenue) AS tot_revenue
FROM store_revenue sr
	JOIN marketing_data mk ON (sr.geo = mk.geo) AND (mk.date = sr.date)
GROUP BY  sr.geo 
ORDER BY sr.date, tot_revenue DESC
;

/* We like to check the Clickthrough rate
CTR(Clickthrough rate is the number of clicks that an ad have ratioed by the number of times ad is shown clicks ÷ impressions */

SELECT sr.date,
       loc.state, 
	   mk.impressions AS mk_impression,
       mk.clicks AS mk_clicks,
	   sr.revenue AS revenue_daily,  
       ROUND((mk.clicks/mk.impressions)*100,2) AS daily_CTR -- Click through rate daily
FROM store_revenue sr
	JOIN marketing_data mk ON (sr.geo = mk.geo) AND  (mk.date = sr.date)
    JOIN location loc ON (mk.geo = loc.geo)
    ;
  
/* We like to check the Clickthrough rate for the overall stores in each state*/

WITH CTR AS(
SELECT  sr.geo AS location, sum(sr.revenue) AS tot_revenue, sum(mk.impressions) AS tot_impressions, sum(mk.clicks) AS tot_clicks
FROM store_revenue sr
	JOIN marketing_data mk ON (sr.geo = mk.geo) AND (mk.date = sr.date)
GROUP BY  sr.geo 
)
SELECT CTR.location, 
	   CTR.tot_revenue,
	   ROUND((CTR.tot_clicks/CTR.tot_impressions)*100,2) AS tot_CTR
FROM CTR
ORDER BY tot_CTR DESC
;
/* From this analysis, although Texas store seems to be leading using the Clickthrough ratio but just within 0.02%
(this is not too statistically significant due to the other factor that could be further considered)
however the total reveune generated by the store in  california is more(although this needs to be investigated as there is a pontential outlier which skewed the distribution)
 and the difference is statistically significant , therefore California store is more efficient)*/ 

    
/*Question #5 (Challenge) Generate a query to rank in order the top 10 revenue producing states​*/
    SELECT 
		ROW_NUMBER() OVER (ORDER BY revenue DESC) AS 'Row_Number',
        RANK() OVER (ORDER BY revenue DESC) AS 'Rank',
        DENSE_RANK() OVER (ORDER BY revenue DESC) AS 'Dense_Rank',
        sr.revenue,
        loc.state
    FROM store_revenue sr
		JOIN location loc ON (loc.geo = sr.geo)
	LIMIT 10;
    -- We have california first on the list with more than 200K , five times more than the next on the list which is New York. 
    -- It is important to notice that NewYork appears most in the list.